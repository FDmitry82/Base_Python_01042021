# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

#print('-----------------Задание 1-----------------------')
def func_1(a, b):
    try:
        return a / b
    except ZeroDivisionError:
        return 'Деление на 0 запрещено'
    except ValueError:
        return 'Введите какое-нибудь значение'

def func_1_use():
    print(func_1((int(input('Введите первое значение: '))), (int(input('Введите второе значение: ')))))
#print('-------------------------------------------------')





# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

#print('-----------------Задание 2-----------------------')
def func_2(**kwargs):
    return list(kwargs.values())


def func_2_use():
    print(func_2(name=input('Введите Имя: '),
                s_name=input('Введите Фамилию: '),
                b_date=input('Дата рождения: '),
                l_town=input('Город: '),
                email=input('email: '),
                tel=input('Телефон: ')))
#print('-------------------------------------------------')




# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.

#print('-----------------Задание 3-----------------------')
def func_3(a, b, c):
    z = [a, b, c]
    z.remove(min(a, b, c))
    return sum(z)


def func_3_use():
    print(func_3(1, 10, 4))
#print('-------------------------------------------------')




# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

#print('-----------------Задание 4-----------------------')
def func_4(x, y):
    return 1 / x ** abs(y)

def func_4_use():
    print(func_4(5, -2))


def func_44(x, y):
    for i in range(abs(y - 1)):
        x *= x
    return 1 / x

def func_44_use():
    print(func_44(3, -5))
#print('-------------------------------------------------')




# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме
# и после этого завершить программу.

#print('-----------------Задание 5-----------------------')
def func_5_use():
    res = 0
    while True:
        numbers = input('Введите числа или # для выхода: ').split()
        for i in numbers:
            try:
                if i == '#':
                    print(f'Сумма чисел {res}')
                    return
                else:
                    res += int(i)
            except ValueError:
                print('Введите число или #')
        print(f'Сумма чисел {res}')
#print('-------------------------------------------------')



# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв
# и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.

# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки,
# но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().

#print('-----------------Задание 6-----------------------')
def func_6(text):
    ls = []
    for i in range(len(text)):
        ls.append(text[i][0:1].title() + text[i][1:])
    return ' '.join(ls)

def func_6_use():
    print(func_6(input('Введите текст: ').split()))
#print('-------------------------------------------------')


#print('-----------------Шаблон меню---------------------')
def sep():
    print('-' * 30)

def refresh():
    print('Выберите задание и его решение')
    sep()
    print('Задание 1. Введите: 1')
    sep()
    print('Задание 2. Введите: 2')
    sep()
    print('Задание 3. Введите: 3')
    sep()
    print('Задание 4. Введите: 4 или 44 (2 решения)')
    sep()
    print('Задание 5. Введите: 5')
    sep()
    print('Задание 6. Введите: 6\n')


# Начальное меню


menu = {1: func_1_use,
        2: func_2_use,
        3: func_3_use,
        4: func_4_use,
        44: func_44_use,
        5: func_5_use,
        6: func_6_use,
        }

number_user = 1

while number_user != 0:
    refresh()
    number_user = int(input('Выберите задание или введите "0", чтобы выйти: '))
    if number_user == 0:
        break
    if number_user in menu:
        x = menu[number_user]
        x()
        input('Нажмите Enter, чтобы продолжить ')
#print('-------------------------------------------------')